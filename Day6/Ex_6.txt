Ex-6.1
Create methods for the Calculator class that can do the following:

Add two numbers.
Subtract two numbers.
Multiply two numbers.
Divide two numbers
example :
	calculator = Calculator()
	calculator.add(10, 5) ➞ 15
	calculator.subtract(10, 5) ➞ 5
	calculator.multiply(10, 5) ➞ 50
	calculator.divide(10, 5) ➞ 2

Ex-6.2
Create a Circle constructor that creates a circle with a radius provided by an argument. The circles constructed must have two getters getArea() (PI*r^2) and getPerimeter() (2*PI*r) which give both respective areas and perimeter (circumference).

For help with this class, I have provided you with a Rectangle constructor which you can use as a base example.

Examples:
	circy = Circle(11)
	circy.getArea()

	# Should return 380.132711084365

	circy = Circle(4.44)
	circy.getPerimeter()

	# Should return 27.897342763877365

Ex-6.3
Create the instance attributes fullname and email in the Employee class. Given a person's first and last names:
	Form the fullname by simply joining the first and last name together, separated by a space.
	Form the email by joining the first and last name together with a . in between, and follow it with @company.com at the end. Make sure the entire email is in lowercase.

Examples:
	emp_1 = Employee("John", "Smith")
	emp_2 = Employee("Mary",  "Sue")
	emp_3 = Employee("Antony", "Walker")

	emp_1.fullname ➞ "John Smith"
	emp_2.email ➞ "mary.sue@company.com"
	emp_3.firstname ➞ "Antony"

Ex-6.4
Given a list of people objects, create a function that sorts the list by an attribute name. The attribute to sort by will be given as a string.

The Person class will only include these attributes in the following order:
	firstname
	lastname
	age

Examples:
	p1 = Person("Michael", "Smith", 40)
	p2 = Person("Alice", "Waters", 21)
	p3 = Person("Zoey", "Jones", 29)
	
	people_sort([p1, p2, p3], "firstname") ➞ [p2, p1, p3]
	# Alice, Michael, Zoey
	people_sort([p1, p2, p3], "lastname") ➞ [p3, p1, p2]
	# Jones, Smith, Waters
	people_sort([p1, p2, p3], "age") ➞ [p2, p3, p1]
	# 21, 29, 40

